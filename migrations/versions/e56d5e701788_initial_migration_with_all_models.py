"""initial migration with all models

Revision ID: e56d5e701788
Revises: 
Create Date: 2025-09-02 19:10:56.392098

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e56d5e701788'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('student_id', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_students_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_students_student_id'), ['student_id'], unique=True)

    op.create_table('submission_manifest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_control',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task_control', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_control_task_id'), ['task_id'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ocr_submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_path', sa.String(length=256), nullable=False),
    sa.Column('extracted_text', sa.Text(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('needs_human_review', sa.Boolean(), nullable=True),
    sa.Column('manual_override', sa.Boolean(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('corrected_name', sa.String(length=255), nullable=True),
    sa.Column('corrected_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=False),
    sa.Column('exam_date', sa.Date(), nullable=False),
    sa.Column('grade_level', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('question_paper_filename', sa.String(length=255), nullable=True),
    sa.Column('rubric_filename', sa.String(length=255), nullable=True),
    sa.Column('marking_guide_filename', sa.String(length=255), nullable=True),
    sa.Column('answered_script_filename', sa.String(length=255), nullable=True),
    sa.Column('class_list_filename', sa.String(length=255), nullable=True),
    sa.Column('combined_scripts_filename', sa.String(length=255), nullable=True),
    sa.Column('reviewed_by_teacher', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('present', sa.Boolean(), nullable=True),
    sa.Column('detected_name', sa.String(), nullable=True),
    sa.Column('detected_id', sa.String(), nullable=True),
    sa.Column('corrected_name', sa.String(), nullable=True),
    sa.Column('corrected_id', sa.String(), nullable=True),
    sa.Column('pdf_path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('ocr_submission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ocr_submission_id'], ['ocr_submission.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bulk_uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('class_list_filename', sa.String(length=255), nullable=True),
    sa.Column('combined_scripts_filename', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marking_guide',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=True),
    sa.Column('grade_level', sa.String(length=100), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('rubric_filename', sa.String(length=255), nullable=True),
    sa.Column('answered_script_filename', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('test_id')
    )
    op.create_table('marksheets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('final_pdf_path', sa.String(length=512), nullable=True),
    sa.Column('final_excel_path', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('test_id')
    )
    op.create_table('ocr_override_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.String(length=50), nullable=True),
    sa.Column('override_type', sa.String(length=50), nullable=True),
    sa.Column('previous_value', sa.String(length=255), nullable=True),
    sa.Column('new_value', sa.String(length=255), nullable=True),
    sa.Column('override_metadata', sa.Text(), nullable=True),
    sa.Column('pdf_path', sa.String(), nullable=True),
    sa.Column('old_name', sa.String(), nullable=True),
    sa.Column('old_id', sa.String(), nullable=True),
    sa.Column('new_name', sa.String(), nullable=True),
    sa.Column('new_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_script',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('marked', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extracted_scripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('extracted_pdf_path', sa.String(length=512), nullable=False),
    sa.Column('ocr_name', sa.String(length=255), nullable=True),
    sa.Column('ocr_student_id', sa.String(length=50), nullable=True),
    sa.Column('ocr_confidence', sa.Float(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('is_absent', sa.Boolean(), nullable=True),
    sa.Column('front_page_image_path', sa.String(length=512), nullable=True),
    sa.Column('qr_detected', sa.Boolean(), nullable=True),
    sa.Column('boundary_marker_confidence', sa.Float(), nullable=True),
    sa.Column('bulk_upload_id', sa.Integer(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bulk_upload_id'], ['bulk_uploads.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('extracted_scripts', schema=None) as batch_op:
        batch_op.create_index('idx_bulk_upload_id', ['bulk_upload_id'], unique=False)
        batch_op.create_index('idx_student_id', ['student_id'], unique=False)
        batch_op.create_index('idx_test_id', ['test_id'], unique=False)

    op.create_table('student_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('guide_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('test_script_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('answer_filename', sa.String(length=255), nullable=True),
    sa.Column('graded_image', sa.String(length=255), nullable=True),
    sa.Column('report_filename', sa.String(length=255), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('ai_confidence', sa.Float(), nullable=True),
    sa.Column('review_status', sa.String(length=20), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('subject', sa.String(length=100), nullable=True),
    sa.Column('grade_level', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['guide_id'], ['marking_guide.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['test_script_id'], ['test_script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('graded_scripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('grader_type', sa.String(length=20), nullable=False),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('rubric_scores', sa.JSON(), nullable=True),
    sa.Column('overlay_data', sa.JSON(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['student_submissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id')
    )
    op.create_table('page_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('extracted_script_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=False),
    sa.Column('is_front_page', sa.Boolean(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('override_flag', sa.Boolean(), nullable=True),
    sa.Column('qr_detected', sa.Boolean(), nullable=True),
    sa.Column('qr_overridden', sa.Boolean(), nullable=True),
    sa.Column('review_comment', sa.String(length=500), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['extracted_script_id'], ['extracted_scripts.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('student_answer', sa.Text(), nullable=True),
    sa.Column('expected_answer', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['student_submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('result')
    op.drop_table('page_reviews')
    op.drop_table('graded_scripts')
    op.drop_table('student_submissions')
    with op.batch_alter_table('extracted_scripts', schema=None) as batch_op:
        batch_op.drop_index('idx_test_id')
        batch_op.drop_index('idx_student_id')
        batch_op.drop_index('idx_bulk_upload_id')

    op.drop_table('extracted_scripts')
    op.drop_table('test_submissions')
    op.drop_table('test_script')
    op.drop_table('teacher_reviews')
    op.drop_table('ocr_override_logs')
    op.drop_table('marksheets')
    op.drop_table('marking_guide')
    op.drop_table('bulk_uploads')
    op.drop_table('audit_log')
    op.drop_table('attendance_record')
    op.drop_table('tests')
    op.drop_table('ocr_submission')
    op.drop_table('users')
    with op.batch_alter_table('task_control', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_control_task_id'))

    op.drop_table('task_control')
    op.drop_table('submission_manifest')
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_students_student_id'))
        batch_op.drop_index(batch_op.f('ix_students_email'))

    op.drop_table('students')
    # ### end Alembic commands ###
